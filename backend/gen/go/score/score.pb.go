// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: score.proto

package score

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadScoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                    // スコアのタイトル
	PdfFile       []byte                 `protobuf:"bytes,2,opt,name=pdf_file,json=pdfFile,proto3" json:"pdf_file,omitempty"` // PDFファイル本体
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadScoreRequest) Reset() {
	*x = UploadScoreRequest{}
	mi := &file_score_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadScoreRequest) ProtoMessage() {}

func (x *UploadScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadScoreRequest.ProtoReflect.Descriptor instead.
func (*UploadScoreRequest) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{0}
}

func (x *UploadScoreRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadScoreRequest) GetPdfFile() []byte {
	if x != nil {
		return x.PdfFile
	}
	return nil
}

type UploadScoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`                // 結果メッセージ
	ScoreId       string                 `protobuf:"bytes,2,opt,name=score_id,json=scoreId,proto3" json:"score_id,omitempty"` // 保存したスコアのIDなど
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadScoreResponse) Reset() {
	*x = UploadScoreResponse{}
	mi := &file_score_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadScoreResponse) ProtoMessage() {}

func (x *UploadScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadScoreResponse.ProtoReflect.Descriptor instead.
func (*UploadScoreResponse) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{1}
}

func (x *UploadScoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadScoreResponse) GetScoreId() string {
	if x != nil {
		return x.ScoreId
	}
	return ""
}

var File_score_proto protoreflect.FileDescriptor

const file_score_proto_rawDesc = "" +
	"\n" +
	"\vscore.proto\x12\x05score\"E\n" +
	"\x12UploadScoreRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x19\n" +
	"\bpdf_file\x18\x02 \x01(\fR\apdfFile\"J\n" +
	"\x13UploadScoreResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x19\n" +
	"\bscore_id\x18\x02 \x01(\tR\ascoreId2T\n" +
	"\fScoreService\x12D\n" +
	"\vUploadScore\x12\x19.score.UploadScoreRequest\x1a\x1a.score.UploadScoreResponseB+Z)score-splitter/backend/gen/go/score;scoreb\x06proto3"

var (
	file_score_proto_rawDescOnce sync.Once
	file_score_proto_rawDescData []byte
)

func file_score_proto_rawDescGZIP() []byte {
	file_score_proto_rawDescOnce.Do(func() {
		file_score_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_score_proto_rawDesc), len(file_score_proto_rawDesc)))
	})
	return file_score_proto_rawDescData
}

var file_score_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_score_proto_goTypes = []any{
	(*UploadScoreRequest)(nil),  // 0: score.UploadScoreRequest
	(*UploadScoreResponse)(nil), // 1: score.UploadScoreResponse
}
var file_score_proto_depIdxs = []int32{
	0, // 0: score.ScoreService.UploadScore:input_type -> score.UploadScoreRequest
	1, // 1: score.ScoreService.UploadScore:output_type -> score.UploadScoreResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_score_proto_init() }
func file_score_proto_init() {
	if File_score_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_score_proto_rawDesc), len(file_score_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_score_proto_goTypes,
		DependencyIndexes: file_score_proto_depIdxs,
		MessageInfos:      file_score_proto_msgTypes,
	}.Build()
	File_score_proto = out.File
	file_score_proto_goTypes = nil
	file_score_proto_depIdxs = nil
}
