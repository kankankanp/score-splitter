// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: score.proto

package score

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadScoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                    // スコアのタイトル
	PdfFile       []byte                 `protobuf:"bytes,2,opt,name=pdf_file,json=pdfFile,proto3" json:"pdf_file,omitempty"` // PDFファイル本体
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadScoreRequest) Reset() {
	*x = UploadScoreRequest{}
	mi := &file_score_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadScoreRequest) ProtoMessage() {}

func (x *UploadScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadScoreRequest.ProtoReflect.Descriptor instead.
func (*UploadScoreRequest) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{0}
}

func (x *UploadScoreRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadScoreRequest) GetPdfFile() []byte {
	if x != nil {
		return x.PdfFile
	}
	return nil
}

type UploadScoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`                // 結果メッセージ
	ScoreId       string                 `protobuf:"bytes,2,opt,name=score_id,json=scoreId,proto3" json:"score_id,omitempty"` // 保存したスコアのIDなど
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadScoreResponse) Reset() {
	*x = UploadScoreResponse{}
	mi := &file_score_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadScoreResponse) ProtoMessage() {}

func (x *UploadScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadScoreResponse.ProtoReflect.Descriptor instead.
func (*UploadScoreResponse) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{1}
}

func (x *UploadScoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadScoreResponse) GetScoreId() string {
	if x != nil {
		return x.ScoreId
	}
	return ""
}

type CropArea struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Top           float64                `protobuf:"fixed64,1,opt,name=top,proto3" json:"top,omitempty"`       // 上端の開始位置 (0.0 - 1.0)
	Left          float64                `protobuf:"fixed64,2,opt,name=left,proto3" json:"left,omitempty"`     // 左端の開始位置 (0.0 - 1.0)
	Width         float64                `protobuf:"fixed64,3,opt,name=width,proto3" json:"width,omitempty"`   // 幅 (0.0 - 1.0)
	Height        float64                `protobuf:"fixed64,4,opt,name=height,proto3" json:"height,omitempty"` // 高さ (0.0 - 1.0)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CropArea) Reset() {
	*x = CropArea{}
	mi := &file_score_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CropArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CropArea) ProtoMessage() {}

func (x *CropArea) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CropArea.ProtoReflect.Descriptor instead.
func (*CropArea) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{2}
}

func (x *CropArea) GetTop() float64 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *CropArea) GetLeft() float64 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *CropArea) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CropArea) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type PageTrimSetting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNumber    int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"` // 対象ページ番号 (1始まり)
	Areas         []*CropArea            `protobuf:"bytes,2,rep,name=areas,proto3" json:"areas,omitempty"`                              // ページごとのトリミングエリア
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageTrimSetting) Reset() {
	*x = PageTrimSetting{}
	mi := &file_score_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageTrimSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageTrimSetting) ProtoMessage() {}

func (x *PageTrimSetting) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageTrimSetting.ProtoReflect.Descriptor instead.
func (*PageTrimSetting) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{3}
}

func (x *PageTrimSetting) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *PageTrimSetting) GetAreas() []*CropArea {
	if x != nil {
		return x.Areas
	}
	return nil
}

type TrimScoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                           // 生成するPDFのベース名
	PdfFile       []byte                 `protobuf:"bytes,2,opt,name=pdf_file,json=pdfFile,proto3" json:"pdf_file,omitempty"`                        // 元のPDF
	Areas         []*CropArea            `protobuf:"bytes,3,rep,name=areas,proto3" json:"areas,omitempty"`                                           // トリミングエリア
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                                     // PDFのパスワード（必要な場合）
	IncludePages  []int32                `protobuf:"varint,5,rep,packed,name=include_pages,json=includePages,proto3" json:"include_pages,omitempty"` // トリミング対象に含めるページ番号（1始まり）
	PageSettings  []*PageTrimSetting     `protobuf:"bytes,6,rep,name=page_settings,json=pageSettings,proto3" json:"page_settings,omitempty"`         // ページごとのトリミング設定
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrimScoreRequest) Reset() {
	*x = TrimScoreRequest{}
	mi := &file_score_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrimScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrimScoreRequest) ProtoMessage() {}

func (x *TrimScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrimScoreRequest.ProtoReflect.Descriptor instead.
func (*TrimScoreRequest) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{4}
}

func (x *TrimScoreRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TrimScoreRequest) GetPdfFile() []byte {
	if x != nil {
		return x.PdfFile
	}
	return nil
}

func (x *TrimScoreRequest) GetAreas() []*CropArea {
	if x != nil {
		return x.Areas
	}
	return nil
}

func (x *TrimScoreRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *TrimScoreRequest) GetIncludePages() []int32 {
	if x != nil {
		return x.IncludePages
	}
	return nil
}

func (x *TrimScoreRequest) GetPageSettings() []*PageTrimSetting {
	if x != nil {
		return x.PageSettings
	}
	return nil
}

type TrimScoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`                         // 結果メッセージ
	TrimmedPdf    []byte                 `protobuf:"bytes,2,opt,name=trimmed_pdf,json=trimmedPdf,proto3" json:"trimmed_pdf,omitempty"` // 生成したPDF
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`                       // 推奨ファイル名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrimScoreResponse) Reset() {
	*x = TrimScoreResponse{}
	mi := &file_score_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrimScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrimScoreResponse) ProtoMessage() {}

func (x *TrimScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrimScoreResponse.ProtoReflect.Descriptor instead.
func (*TrimScoreResponse) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{5}
}

func (x *TrimScoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TrimScoreResponse) GetTrimmedPdf() []byte {
	if x != nil {
		return x.TrimmedPdf
	}
	return nil
}

func (x *TrimScoreResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type SearchYoutubeVideosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"` // 検索キーワード
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchYoutubeVideosRequest) Reset() {
	*x = SearchYoutubeVideosRequest{}
	mi := &file_score_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchYoutubeVideosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchYoutubeVideosRequest) ProtoMessage() {}

func (x *SearchYoutubeVideosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchYoutubeVideosRequest.ProtoReflect.Descriptor instead.
func (*SearchYoutubeVideosRequest) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{6}
}

func (x *SearchYoutubeVideosRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type YoutubeVideo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       string                 `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ThumbnailUrl  string                 `protobuf:"bytes,3,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YoutubeVideo) Reset() {
	*x = YoutubeVideo{}
	mi := &file_score_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YoutubeVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoutubeVideo) ProtoMessage() {}

func (x *YoutubeVideo) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoutubeVideo.ProtoReflect.Descriptor instead.
func (*YoutubeVideo) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{7}
}

func (x *YoutubeVideo) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *YoutubeVideo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *YoutubeVideo) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

type SearchYoutubeVideosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        []*YoutubeVideo        `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchYoutubeVideosResponse) Reset() {
	*x = SearchYoutubeVideosResponse{}
	mi := &file_score_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchYoutubeVideosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchYoutubeVideosResponse) ProtoMessage() {}

func (x *SearchYoutubeVideosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchYoutubeVideosResponse.ProtoReflect.Descriptor instead.
func (*SearchYoutubeVideosResponse) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{8}
}

func (x *SearchYoutubeVideosResponse) GetVideos() []*YoutubeVideo {
	if x != nil {
		return x.Videos
	}
	return nil
}

type GenerateScrollVideoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                 // 動画のタイトル
	PdfFile       []byte                 `protobuf:"bytes,2,opt,name=pdf_file,json=pdfFile,proto3" json:"pdf_file,omitempty"`              // トリミング済みPDFファイル
	Bpm           int32                  `protobuf:"varint,3,opt,name=bpm,proto3" json:"bpm,omitempty"`                                    // BPM（スクロール速度の基準）
	VideoWidth    int32                  `protobuf:"varint,4,opt,name=video_width,json=videoWidth,proto3" json:"video_width,omitempty"`    // 動画の幅（デフォルト: 1920）
	VideoHeight   int32                  `protobuf:"varint,5,opt,name=video_height,json=videoHeight,proto3" json:"video_height,omitempty"` // 動画の高さ（デフォルト: 1080）
	Fps           int32                  `protobuf:"varint,6,opt,name=fps,proto3" json:"fps,omitempty"`                                    // フレームレート（デフォルト: 30）
	Format        string                 `protobuf:"bytes,7,opt,name=format,proto3" json:"format,omitempty"`                               // 出力フォーマット（"mp4", "webm"等、デフォルト: "mp4"）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateScrollVideoRequest) Reset() {
	*x = GenerateScrollVideoRequest{}
	mi := &file_score_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateScrollVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateScrollVideoRequest) ProtoMessage() {}

func (x *GenerateScrollVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateScrollVideoRequest.ProtoReflect.Descriptor instead.
func (*GenerateScrollVideoRequest) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{9}
}

func (x *GenerateScrollVideoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GenerateScrollVideoRequest) GetPdfFile() []byte {
	if x != nil {
		return x.PdfFile
	}
	return nil
}

func (x *GenerateScrollVideoRequest) GetBpm() int32 {
	if x != nil {
		return x.Bpm
	}
	return 0
}

func (x *GenerateScrollVideoRequest) GetVideoWidth() int32 {
	if x != nil {
		return x.VideoWidth
	}
	return 0
}

func (x *GenerateScrollVideoRequest) GetVideoHeight() int32 {
	if x != nil {
		return x.VideoHeight
	}
	return 0
}

func (x *GenerateScrollVideoRequest) GetFps() int32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *GenerateScrollVideoRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type GenerateScrollVideoResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Message         string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`                                         // 結果メッセージ
	VideoData       []byte                 `protobuf:"bytes,2,opt,name=video_data,json=videoData,proto3" json:"video_data,omitempty"`                    // 生成された動画データ
	Filename        string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`                                       // 推奨ファイル名
	DurationSeconds int32                  `protobuf:"varint,4,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"` // 動画の長さ（秒）
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GenerateScrollVideoResponse) Reset() {
	*x = GenerateScrollVideoResponse{}
	mi := &file_score_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateScrollVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateScrollVideoResponse) ProtoMessage() {}

func (x *GenerateScrollVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_score_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateScrollVideoResponse.ProtoReflect.Descriptor instead.
func (*GenerateScrollVideoResponse) Descriptor() ([]byte, []int) {
	return file_score_proto_rawDescGZIP(), []int{10}
}

func (x *GenerateScrollVideoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GenerateScrollVideoResponse) GetVideoData() []byte {
	if x != nil {
		return x.VideoData
	}
	return nil
}

func (x *GenerateScrollVideoResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GenerateScrollVideoResponse) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

var File_score_proto protoreflect.FileDescriptor

const file_score_proto_rawDesc = "" +
	"\n" +
	"\vscore.proto\x12\x05score\"E\n" +
	"\x12UploadScoreRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x19\n" +
	"\bpdf_file\x18\x02 \x01(\fR\apdfFile\"J\n" +
	"\x13UploadScoreResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x19\n" +
	"\bscore_id\x18\x02 \x01(\tR\ascoreId\"^\n" +
	"\bCropArea\x12\x10\n" +
	"\x03top\x18\x01 \x01(\x01R\x03top\x12\x12\n" +
	"\x04left\x18\x02 \x01(\x01R\x04left\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x01R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x01R\x06height\"Y\n" +
	"\x0fPageTrimSetting\x12\x1f\n" +
	"\vpage_number\x18\x01 \x01(\x05R\n" +
	"pageNumber\x12%\n" +
	"\x05areas\x18\x02 \x03(\v2\x0f.score.CropAreaR\x05areas\"\xe8\x01\n" +
	"\x10TrimScoreRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x19\n" +
	"\bpdf_file\x18\x02 \x01(\fR\apdfFile\x12%\n" +
	"\x05areas\x18\x03 \x03(\v2\x0f.score.CropAreaR\x05areas\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12#\n" +
	"\rinclude_pages\x18\x05 \x03(\x05R\fincludePages\x12;\n" +
	"\rpage_settings\x18\x06 \x03(\v2\x16.score.PageTrimSettingR\fpageSettings\"j\n" +
	"\x11TrimScoreResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1f\n" +
	"\vtrimmed_pdf\x18\x02 \x01(\fR\n" +
	"trimmedPdf\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\"2\n" +
	"\x1aSearchYoutubeVideosRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\"d\n" +
	"\fYoutubeVideo\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\tR\avideoId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12#\n" +
	"\rthumbnail_url\x18\x03 \x01(\tR\fthumbnailUrl\"J\n" +
	"\x1bSearchYoutubeVideosResponse\x12+\n" +
	"\x06videos\x18\x01 \x03(\v2\x13.score.YoutubeVideoR\x06videos\"\xcd\x01\n" +
	"\x1aGenerateScrollVideoRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x19\n" +
	"\bpdf_file\x18\x02 \x01(\fR\apdfFile\x12\x10\n" +
	"\x03bpm\x18\x03 \x01(\x05R\x03bpm\x12\x1f\n" +
	"\vvideo_width\x18\x04 \x01(\x05R\n" +
	"videoWidth\x12!\n" +
	"\fvideo_height\x18\x05 \x01(\x05R\vvideoHeight\x12\x10\n" +
	"\x03fps\x18\x06 \x01(\x05R\x03fps\x12\x16\n" +
	"\x06format\x18\a \x01(\tR\x06format\"\x9d\x01\n" +
	"\x1bGenerateScrollVideoResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"video_data\x18\x02 \x01(\fR\tvideoData\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12)\n" +
	"\x10duration_seconds\x18\x04 \x01(\x05R\x0fdurationSeconds2\xd0\x02\n" +
	"\fScoreService\x12D\n" +
	"\vUploadScore\x12\x19.score.UploadScoreRequest\x1a\x1a.score.UploadScoreResponse\x12>\n" +
	"\tTrimScore\x12\x17.score.TrimScoreRequest\x1a\x18.score.TrimScoreResponse\x12\\\n" +
	"\x13SearchYoutubeVideos\x12!.score.SearchYoutubeVideosRequest\x1a\".score.SearchYoutubeVideosResponse\x12\\\n" +
	"\x13GenerateScrollVideo\x12!.score.GenerateScrollVideoRequest\x1a\".score.GenerateScrollVideoResponseB+Z)score-splitter/backend/gen/go/score;scoreb\x06proto3"

var (
	file_score_proto_rawDescOnce sync.Once
	file_score_proto_rawDescData []byte
)

func file_score_proto_rawDescGZIP() []byte {
	file_score_proto_rawDescOnce.Do(func() {
		file_score_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_score_proto_rawDesc), len(file_score_proto_rawDesc)))
	})
	return file_score_proto_rawDescData
}

var file_score_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_score_proto_goTypes = []any{
	(*UploadScoreRequest)(nil),          // 0: score.UploadScoreRequest
	(*UploadScoreResponse)(nil),         // 1: score.UploadScoreResponse
	(*CropArea)(nil),                    // 2: score.CropArea
	(*PageTrimSetting)(nil),             // 3: score.PageTrimSetting
	(*TrimScoreRequest)(nil),            // 4: score.TrimScoreRequest
	(*TrimScoreResponse)(nil),           // 5: score.TrimScoreResponse
	(*SearchYoutubeVideosRequest)(nil),  // 6: score.SearchYoutubeVideosRequest
	(*YoutubeVideo)(nil),                // 7: score.YoutubeVideo
	(*SearchYoutubeVideosResponse)(nil), // 8: score.SearchYoutubeVideosResponse
	(*GenerateScrollVideoRequest)(nil),  // 9: score.GenerateScrollVideoRequest
	(*GenerateScrollVideoResponse)(nil), // 10: score.GenerateScrollVideoResponse
}
var file_score_proto_depIdxs = []int32{
	2,  // 0: score.PageTrimSetting.areas:type_name -> score.CropArea
	2,  // 1: score.TrimScoreRequest.areas:type_name -> score.CropArea
	3,  // 2: score.TrimScoreRequest.page_settings:type_name -> score.PageTrimSetting
	7,  // 3: score.SearchYoutubeVideosResponse.videos:type_name -> score.YoutubeVideo
	0,  // 4: score.ScoreService.UploadScore:input_type -> score.UploadScoreRequest
	4,  // 5: score.ScoreService.TrimScore:input_type -> score.TrimScoreRequest
	6,  // 6: score.ScoreService.SearchYoutubeVideos:input_type -> score.SearchYoutubeVideosRequest
	9,  // 7: score.ScoreService.GenerateScrollVideo:input_type -> score.GenerateScrollVideoRequest
	1,  // 8: score.ScoreService.UploadScore:output_type -> score.UploadScoreResponse
	5,  // 9: score.ScoreService.TrimScore:output_type -> score.TrimScoreResponse
	8,  // 10: score.ScoreService.SearchYoutubeVideos:output_type -> score.SearchYoutubeVideosResponse
	10, // 11: score.ScoreService.GenerateScrollVideo:output_type -> score.GenerateScrollVideoResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_score_proto_init() }
func file_score_proto_init() {
	if File_score_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_score_proto_rawDesc), len(file_score_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_score_proto_goTypes,
		DependencyIndexes: file_score_proto_depIdxs,
		MessageInfos:      file_score_proto_msgTypes,
	}.Build()
	File_score_proto = out.File
	file_score_proto_goTypes = nil
	file_score_proto_depIdxs = nil
}
